import argparse
import os
import sys
import io
import re
from urllib.parse import urlparse
import search_download_photo

sys.stdout = io.TextIOWrapper(sys.stdout.detach(), encoding='utf-8')

def main():
    parser = argparse.ArgumentParser(description="–õ–∞—É–Ω—á–µ—Ä: –∑–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏.")
    parser.add_argument("--url", required=True, help="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ.")
    parser.add_argument("--id", required=True, help="ID –æ–±—ä–µ–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å—Ç–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã).")

    def sanitize(name):
        return re.sub(r'[<>:"/\\|?*]', '_', name)
    
    args = parser.parse_args()
    parsed_url = urlparse(args.url)
    domain = sanitize(parsed_url.netloc)  # –Ω–∞–ø—Ä–∏–º–µ—Ä: 'sreality.cz' ‚Üí 'sreality.cz'
    folder_name = f"{args.id}_{domain}"  # –Ω–∞–ø—Ä–∏–º–µ—Ä: '123_sreality.cz'
    
    media_dir = os.path.join("../static/media", folder_name)
    url = args.url

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ media/<id>
    if not os.path.exists(media_dir):
        os.makedirs(media_dir)
        print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {media_dir}")
    else:
        print(f"üìÅ –ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {media_dir}")

    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    if "bezrealitky.cz" in url:
        images = search_download_photo.find_images_bezrealitky(url)
            
    elif "reality.bazos.cz" in url:
        images = search_download_photo.find_images_bazos(url)
            
    elif "sreality.cz" in url:
        images = search_download_photo.find_images_sreality(url) 
            
    elif "byty.cz" in url:
        images = search_download_photo.find_images_bytycz(url)
            
    elif 'sbazar.cz' in url:
        images = search_download_photo.find_images_sbazar(url)
            
    elif 'realitymix.cz' in url:
        images = search_download_photo.find_images_realitymix(url)
            
    elif 'reality.idnes.cz' in url:
        images = search_download_photo.find_image_idnes(url)
            
    else:   
        print(f"–ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Å–∞–π—Ç –¥–ª—è URL {url}")
        return
    

    
    

    for image_url in images:
        image_path = search_download_photo.download_image(image_url, media_dir)
        if image_path:
            print(f'–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ –≤ {image_path}')

if __name__ == "__main__":
    main()
