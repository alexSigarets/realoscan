// =====================
// üìÅ MAIN.JS
// –ì–ª–∞–≤–Ω—ã–π –≤—Ö–æ–¥: –∑–∞–≥—Ä—É–∑–∫–∞, —Ñ–∏–ª—å—Ç—Ä—ã, –æ—Ç—Ä–∏—Å–æ–≤–∫–∞, —Ä–æ–ª–∏
// =====================

import {
    renderActivityFilter,
    renderRealityTypeFilter,
    renderRegionTypeFilter,
    restoreFiltersFromURL,
    fetchFilteredApartments,
    resetFilters
} from "./filters.js";
import { renderApartments } from "./apartments.js";
import { showPreloader, hidePreloader, updateApartmentCount, checkRole, showToast  } from "./utils.js";
import { DistrictId } from './constants.js'; // –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
import { fetchFavoriteIds } from "./favorites.js";

let allApartments = [];

// –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã–∑ —Å —Å–µ—Ä–≤–µ—Ä–∞ 
export async function fetchApartments(favoriteIds) {
    
    try {
        const response = await fetch("apartments/");
        const data = await response.json();
        
        renderApartments(data, favoriteIds);
        updateApartmentCount(data.length); // <--- –≤—ã–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
        renderActivityFilter(data); // <---- –≤—ã–∑—ã–≤–≤–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (Activity)
        renderRealityTypeFilter(data); // <---- –≤—ã–∑—ã–≤–≤–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (RealityType)
        renderRegionTypeFilter(data); // <---- –≤—ã–∑—ã–≤–≤–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (RegionType)
        allApartments = data
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä:", error);
    }
}





// –°–ª—É—à–∞–µ–º Select –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—Ä–∞—è –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è okres
document.getElementById("kraj").addEventListener("change", () => {
    const krajValue = document.getElementById("kraj").value;
    const prahaCheckboxes = document.getElementById("praha-checkboxes");
    const checkboxes = prahaCheckboxes.querySelectorAll("input[type='checkbox']");
    const okresSelect = document.getElementById("okres");

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç—å—é Praha-checkboxes
    if (krajValue === "1") {
        prahaCheckboxes.style.opacity = "1";
        prahaCheckboxes.style.pointerEvents = "auto";
    } else {
        prahaCheckboxes.style.opacity = "0";
        prahaCheckboxes.style.pointerEvents = "none";
        checkboxes.forEach(cb => cb.checked = false);
    }

    // –û—á–∏—Å—Ç–∏—Ç—å okres
    okresSelect.innerHTML = '<option value="0">Nez√°le≈æ√≠</option>';

    // –ó–∞–ø–æ–ª–Ω–∏—Ç—å okres, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω St≈ôedoƒçesk√Ω kraj
    if (krajValue === "8") {
        const okresSet = new Set();
        allApartments.forEach(apartment => {
            if (apartment.RegionID == "8" && apartment.DistrictId && DistrictId[apartment.DistrictId]) {
                okresSet.add(apartment.DistrictId);
            }
        });

        Array.from(okresSet).sort((a, b) => {
            return DistrictId[a].localeCompare(DistrictId[b]);
        }).forEach(districtId => {
            const option = document.createElement("option");
            option.value = districtId;
            option.textContent = DistrictId[districtId];
            okresSelect.appendChild(option);
        });
    }
});





// –ù–æ–≤–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞(–°–µ—Ä–≤–µ—Ä)
document.getElementById("filter-btn").addEventListener("click", async () => {
    const favoriteIds = await fetchFavoriteIds();
    fetchFilteredApartments(favoriteIds)
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
document.getElementById("reset-btn").addEventListener("click", async () =>{
    const favoriteIds = await fetchFavoriteIds();
    resetFilters(favoriteIds)
});




// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∞):
document.getElementById("adminRegisterBtn").addEventListener("click", () => {
    const token = localStorage.getItem("token");
    if (!token) {
        alert("Chyb√≠ token! P≈ôihla≈°te se nejprve jako administr√°tor.");
        return;
    }

    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–¥—É–±–ª–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å –≤ cookie
    document.cookie = `token=${token}; path=/`;

    // –ü–µ—Ä–µ–π–¥—ë–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    window.location.href = "/admin/register";
});



// –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", async () => {
    

    checkRole();

    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const response = await fetch("apartments/");
    const data = await response.json();
    allApartments = data;

    const favoriteIds = await fetchFavoriteIds();

    if(response.status === 429){
        showToast('Byl p≈ôekroƒçen limit po≈æadavk≈Ø', 'error');
        renderApartments(data, favoriteIds, response); // –í—ã–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å –æ—à–∏–±–∫–æ–π
        return
    }
    
    // 2. –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    renderActivityFilter(data, response);
    renderRealityTypeFilter(data, response);
    renderRegionTypeFilter(data, response);

    // 3. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è select –∏ —á–µ–∫–±–æ–∫—Å–æ–≤
    restoreFiltersFromURL();

    // 4. –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä, –µ—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã –µ—Å—Ç—å
    const hasFilters =
        window.location.search.includes("region_id") ||
        window.location.search.includes("activity") ||
        window.location.search.includes("reality_type") ||
        window.location.search.includes("district_id") ||
        window.location.search.includes("prague_id");

    
    if (hasFilters) {
        
        await fetchFilteredApartments(favoriteIds); // –ø–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã
    } else {
        
        
        renderApartments(data, favoriteIds, response); // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ
        updateApartmentCount(data.length);
    }

    
});
